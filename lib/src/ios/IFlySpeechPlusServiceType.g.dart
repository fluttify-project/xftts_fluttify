// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum IFlySpeechPlusServiceType {
  IFlySpeechPlusServiceTypeNone /* 0 */,
  IFlySpeechPlusServiceTypeTTS /* null */,
  IFlySpeechPlusServiceTypeISR /* null */,
  IFlySpeechPlusServiceTypeIVW /* null */
}

extension IFlySpeechPlusServiceTypeToX on IFlySpeechPlusServiceType {
  int toValue() {
    switch (this) {
      case IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeNone: return 0;
      case IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeTTS: return IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeTTS.index + 0;
      case IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeISR: return IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeISR.index + 0;
      case IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeIVW: return IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeIVW.index + 0;
      default: return 0;
    }
  }
}

extension IFlySpeechPlusServiceTypeFromX on int {
  IFlySpeechPlusServiceType toIFlySpeechPlusServiceType() {
    switch (this) {
      case 0: return IFlySpeechPlusServiceType.IFlySpeechPlusServiceTypeNone;
      default: return IFlySpeechPlusServiceType.values[this + 0];
    }
  }
}