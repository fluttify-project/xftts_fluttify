//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.xftts_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.common.StandardMethodCodec;
import io.flutter.plugin.platform.PlatformViewRegistry;

import com.fluttify.xftts_fluttify.XfttsFluttifyPlugin.Handler;
import me.yohom.foundation_fluttify.core.FluttifyMessageCodec;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler1 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // setter
            put("com.iflytek.msc.VAD.VadData::set_startRemainFrameNum", (__args__, __methodResult__) -> {
                // ref arg
                Number startRemainFrameNum = (Number) ((Map<String, Object>) __args__).get("startRemainFrameNum");
                com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.startRemainFrameNum = startRemainFrameNum.intValue();
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.msc.VAD.VadData::set_wavData", (__args__, __methodResult__) -> {
                // ref arg
                byte[] wavData = (byte[]) ((Map<String, Object>) __args__).get("wavData");
                com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.wavData = wavData;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.msc.VAD.VadData::set_wavDataSize", (__args__, __methodResult__) -> {
                // ref arg
                Number wavDataSize = (Number) ((Map<String, Object>) __args__).get("wavDataSize");
                com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.wavDataSize = wavDataSize.intValue();
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.msc.VAD.VadData::set_inSpeech", (__args__, __methodResult__) -> {
                // ref arg
                Number inSpeech = (Number) ((Map<String, Object>) __args__).get("inSpeech");
                com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.inSpeech = inSpeech.intValue();
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.msc.VAD.VadData::set_audioQuality", (__args__, __methodResult__) -> {
                // ref arg
                Number audioQuality = (Number) ((Map<String, Object>) __args__).get("audioQuality");
                com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.audioQuality = audioQuality.intValue();
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.msc.VAD.VadData::set_firstOutByte", (__args__, __methodResult__) -> {
                // ref arg
                Number firstOutByte = (Number) ((Map<String, Object>) __args__).get("firstOutByte");
                com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.firstOutByte = firstOutByte.intValue();
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwdt", (__args__, __methodResult__) -> {
                // ref arg
                String pwdt = (String) ((Map<String, Object>) __args__).get("pwdt");
                com.iflytek.speech.SpeakerVerifierAidl.PassWord __this__ = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.pwdt = pwdt;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwid", (__args__, __methodResult__) -> {
                // ref arg
                String pwid = (String) ((Map<String, Object>) __args__).get("pwid");
                com.iflytek.speech.SpeakerVerifierAidl.PassWord __this__ = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.pwid = pwid;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwtext", (__args__, __methodResult__) -> {
                // ref arg
                String pwtext = (String) ((Map<String, Object>) __args__).get("pwtext");
                com.iflytek.speech.SpeakerVerifierAidl.PassWord __this__ = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.pwtext = pwtext;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_sst", (__args__, __methodResult__) -> {
                // ref arg
                String sst = (String) ((Map<String, Object>) __args__).get("sst");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.sst = sst;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_ret", (__args__, __methodResult__) -> {
                // ref arg
                boolean ret = (boolean) ((Map<String, Object>) __args__).get("ret");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.ret = ret;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_dcs", (__args__, __methodResult__) -> {
                // ref arg
                String dcs = (String) ((Map<String, Object>) __args__).get("dcs");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.dcs = dcs;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_vid", (__args__, __methodResult__) -> {
                // ref arg
                String vid = (String) ((Map<String, Object>) __args__).get("vid");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.vid = vid;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_suc", (__args__, __methodResult__) -> {
                // ref arg
                Number suc = (Number) ((Map<String, Object>) __args__).get("suc");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.suc = suc.intValue();
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_rgn", (__args__, __methodResult__) -> {
                // ref arg
                Number rgn = (Number) ((Map<String, Object>) __args__).get("rgn");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.rgn = rgn.intValue();
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_trs", (__args__, __methodResult__) -> {
                // ref arg
                String trs = (String) ((Map<String, Object>) __args__).get("trs");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.trs = trs;
                __methodResult__.success("success");
            });
            // setter
            put("com.iflytek.speech.VerifierResult::set_source", (__args__, __methodResult__) -> {
                // ref arg
                String source = (String) ((Map<String, Object>) __args__).get("source");
                com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                __this__.source = source;
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_buffer_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    byte[] buffer = (byte[]) ((Map<String, Object>) __args__).get("buffer");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.buffer = buffer;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_offset_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number offset = (Number) ((Map<String, Object>) __args__).get("offset");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.offset = offset.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_length_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number length = (Number) ((Map<String, Object>) __args__).get("length");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.length = length.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_status_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number status = (Number) ((Map<String, Object>) __args__).get("status");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.status = status.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_sub_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number sub = (Number) ((Map<String, Object>) __args__).get("sub");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.sub = sub.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_volume_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number volume = (Number) ((Map<String, Object>) __args__).get("volume");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.volume = volume.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_voice_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    boolean voice = (boolean) ((Map<String, Object>) __args__).get("voice");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.voice = voice;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_quality_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number quality = (Number) ((Map<String, Object>) __args__).get("quality");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.quality = quality.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_start_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number start = (Number) ((Map<String, Object>) __args__).get("start");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.start = start.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_end_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number end = (Number) ((Map<String, Object>) __args__).get("end");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.end = end.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_error_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number error = (Number) ((Map<String, Object>) __args__).get("error");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.error = error.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_confidence_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number confidence = (Number) ((Map<String, Object>) __args__).get("confidence");
            
                    com.iflytek.cloud.util.AudioDetector.DetectorResult __this__ = (com.iflytek.cloud.util.AudioDetector.DetectorResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.confidence = confidence.floatValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_sst_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String sst = (String) ((Map<String, Object>) __args__).get("sst");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.sst = sst;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_ret_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number ret = (Number) ((Map<String, Object>) __args__).get("ret");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.ret = ret.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_dcs_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String dcs = (String) ((Map<String, Object>) __args__).get("dcs");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.dcs = dcs;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_score_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number score = (Number) ((Map<String, Object>) __args__).get("score");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.score = score.doubleValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_score_raw_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number score_raw = (Number) ((Map<String, Object>) __args__).get("score_raw");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.score_raw = score_raw.doubleValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_vid_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String vid = (String) ((Map<String, Object>) __args__).get("vid");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.vid = vid;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_suc_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number suc = (Number) ((Map<String, Object>) __args__).get("suc");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.suc = suc.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_rgn_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number rgn = (Number) ((Map<String, Object>) __args__).get("rgn");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.rgn = rgn.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_trs_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String trs = (String) ((Map<String, Object>) __args__).get("trs");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.trs = trs;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_err_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number err = (Number) ((Map<String, Object>) __args__).get("err");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.err = err.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.cloud.VerifierResult::set_source_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String source = (String) ((Map<String, Object>) __args__).get("source");
            
                    com.iflytek.cloud.VerifierResult __this__ = (com.iflytek.cloud.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.source = source;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_handle_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number handle = (Number) ((Map<String, Object>) __args__).get("handle");
            
                    com.iflytek.msc.MetaVAD.Instance __this__ = (com.iflytek.msc.MetaVAD.Instance) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.handle = handle.longValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_rate_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number rate = (Number) ((Map<String, Object>) __args__).get("rate");
            
                    com.iflytek.msc.MetaVAD.Instance __this__ = (com.iflytek.msc.MetaVAD.Instance) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.rate = rate.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_begin_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number begin = (Number) ((Map<String, Object>) __args__).get("begin");
            
                    com.iflytek.msc.MetaVAD.Instance __this__ = (com.iflytek.msc.MetaVAD.Instance) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.begin = begin.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_end_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number end = (Number) ((Map<String, Object>) __args__).get("end");
            
                    com.iflytek.msc.MetaVAD.Instance __this__ = (com.iflytek.msc.MetaVAD.Instance) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.end = end.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_seg_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number seg = (Number) ((Map<String, Object>) __args__).get("seg");
            
                    com.iflytek.msc.MetaVAD.Instance __this__ = (com.iflytek.msc.MetaVAD.Instance) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.seg = seg.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MetaVAD.Instance::set_volume_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number volume = (Number) ((Map<String, Object>) __args__).get("volume");
            
                    com.iflytek.msc.MetaVAD.Instance __this__ = (com.iflytek.msc.MetaVAD.Instance) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.volume = volume.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_errorcode_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number errorcode = (Number) ((Map<String, Object>) __args__).get("errorcode");
            
                    com.iflytek.msc.MSCSessionInfo __this__ = (com.iflytek.msc.MSCSessionInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.errorcode = errorcode.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_epstatues_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number epstatues = (Number) ((Map<String, Object>) __args__).get("epstatues");
            
                    com.iflytek.msc.MSCSessionInfo __this__ = (com.iflytek.msc.MSCSessionInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.epstatues = epstatues.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_rsltstatus_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number rsltstatus = (Number) ((Map<String, Object>) __args__).get("rsltstatus");
            
                    com.iflytek.msc.MSCSessionInfo __this__ = (com.iflytek.msc.MSCSessionInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.rsltstatus = rsltstatus.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_sesstatus_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number sesstatus = (Number) ((Map<String, Object>) __args__).get("sesstatus");
            
                    com.iflytek.msc.MSCSessionInfo __this__ = (com.iflytek.msc.MSCSessionInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.sesstatus = sesstatus.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_buffer_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    byte[] buffer = (byte[]) ((Map<String, Object>) __args__).get("buffer");
            
                    com.iflytek.msc.MSCSessionInfo __this__ = (com.iflytek.msc.MSCSessionInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.buffer = buffer;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.MSCSessionInfo::set_buflen_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number buflen = (Number) ((Map<String, Object>) __args__).get("buflen");
            
                    com.iflytek.msc.MSCSessionInfo __this__ = (com.iflytek.msc.MSCSessionInfo) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.buflen = buflen.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_startByte_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number startByte = (Number) ((Map<String, Object>) __args__).get("startByte");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.startByte = startByte.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_endByte_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number endByte = (Number) ((Map<String, Object>) __args__).get("endByte");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.endByte = endByte.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_status_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number status = (Number) ((Map<String, Object>) __args__).get("status");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.status = status.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_volumeLevel_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number volumeLevel = (Number) ((Map<String, Object>) __args__).get("volumeLevel");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.volumeLevel = volumeLevel.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_waitPauseOrEnd_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number waitPauseOrEnd = (Number) ((Map<String, Object>) __args__).get("waitPauseOrEnd");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.waitPauseOrEnd = waitPauseOrEnd.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_endRemainFrameNum_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number endRemainFrameNum = (Number) ((Map<String, Object>) __args__).get("endRemainFrameNum");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.endRemainFrameNum = endRemainFrameNum.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_waitStart_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number waitStart = (Number) ((Map<String, Object>) __args__).get("waitStart");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.waitStart = waitStart.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_startRemainFrameNum_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number startRemainFrameNum = (Number) ((Map<String, Object>) __args__).get("startRemainFrameNum");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.startRemainFrameNum = startRemainFrameNum.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_wavData_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    byte[] wavData = (byte[]) ((Map<String, Object>) __args__).get("wavData");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.wavData = wavData;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_wavDataSize_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number wavDataSize = (Number) ((Map<String, Object>) __args__).get("wavDataSize");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.wavDataSize = wavDataSize.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_inSpeech_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number inSpeech = (Number) ((Map<String, Object>) __args__).get("inSpeech");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.inSpeech = inSpeech.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_audioQuality_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number audioQuality = (Number) ((Map<String, Object>) __args__).get("audioQuality");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.audioQuality = audioQuality.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.msc.VAD.VadData::set_firstOutByte_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number firstOutByte = (Number) ((Map<String, Object>) __args__).get("firstOutByte");
            
                    com.iflytek.msc.VAD.VadData __this__ = (com.iflytek.msc.VAD.VadData) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.firstOutByte = firstOutByte.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwdt_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String pwdt = (String) ((Map<String, Object>) __args__).get("pwdt");
            
                    com.iflytek.speech.SpeakerVerifierAidl.PassWord __this__ = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.pwdt = pwdt;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwid_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String pwid = (String) ((Map<String, Object>) __args__).get("pwid");
            
                    com.iflytek.speech.SpeakerVerifierAidl.PassWord __this__ = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.pwid = pwid;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwtext_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String pwtext = (String) ((Map<String, Object>) __args__).get("pwtext");
            
                    com.iflytek.speech.SpeakerVerifierAidl.PassWord __this__ = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.pwtext = pwtext;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_sst_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String sst = (String) ((Map<String, Object>) __args__).get("sst");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.sst = sst;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_ret_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    boolean ret = (boolean) ((Map<String, Object>) __args__).get("ret");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.ret = ret;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_dcs_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String dcs = (String) ((Map<String, Object>) __args__).get("dcs");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.dcs = dcs;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_vid_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String vid = (String) ((Map<String, Object>) __args__).get("vid");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.vid = vid;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_suc_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number suc = (Number) ((Map<String, Object>) __args__).get("suc");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.suc = suc.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_rgn_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    Number rgn = (Number) ((Map<String, Object>) __args__).get("rgn");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.rgn = rgn.intValue();
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_trs_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String trs = (String) ((Map<String, Object>) __args__).get("trs");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.trs = trs;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("com.iflytek.speech.VerifierResult::set_source_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref arg
                    String source = (String) ((Map<String, Object>) __args__).get("source");
            
                    com.iflytek.speech.VerifierResult __this__ = (com.iflytek.speech.VerifierResult) ((Map<String, Object>) __args__).get("__this__");
            
                    __this__.source = source;
                }
            
                __methodResult__.success("success");
            });
            // method
            put("com.iflytek.cloud.DataDownloader::downloadData", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.DataDownloader __this__ = (com.iflytek.cloud.DataDownloader) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.DataDownloader@" + __this__ + "::downloadData(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.downloadData(new com.iflytek.cloud.SpeechListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.DataDownloader::downloadData::Callback@" + String.valueOf(System.identityHashCode(__this__)), new StandardMethodCodec(new FluttifyMessageCodec()));
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onEvent(int var1, android.os.Bundle var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.SpeechListener::onEvent",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onBufferReceived(byte[] var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onBufferReceived(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.SpeechListener::onBufferReceived",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.SpeechListener::onCompleted",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.DataUploader::uploadData", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // ref arg
                byte[] var3 = (byte[]) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                com.iflytek.cloud.DataUploader __this__ = (com.iflytek.cloud.DataUploader) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.DataUploader@" + __this__ + "::uploadData(" + var2 + var3 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.uploadData(new com.iflytek.cloud.SpeechListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.DataUploader::uploadData::Callback@" + String.valueOf(System.identityHashCode(__this__)), new StandardMethodCodec(new FluttifyMessageCodec()));
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onEvent(int var1, android.os.Bundle var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.SpeechListener::onEvent",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onBufferReceived(byte[] var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onBufferReceived(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.SpeechListener::onBufferReceived",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.SpeechListener::onCompleted",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                }, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.EvaluatorResult::getResultString", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.EvaluatorResult __this__ = (com.iflytek.cloud.EvaluatorResult) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorResult@" + __this__ + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::createDetector", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector::createDetector(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.FaceDetector __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.FaceDetector.createDetector(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::getDetector", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector::getDetector(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.FaceDetector __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.FaceDetector.getDetector();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::detectARGB", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.FaceDetector __this__ = (com.iflytek.cloud.FaceDetector) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + __this__ + "::detectARGB(" + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.detectARGB(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::detectGray", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.graphics.Bitmap var1 = (android.graphics.Bitmap) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.FaceDetector __this__ = (com.iflytek.cloud.FaceDetector) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + __this__ + "::detectGray(" + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.detectGray(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::trackNV21", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
                // ref arg
                Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
                // ref arg
                Number var4 = (Number) ((Map<String, Object>) __args__).get("var4");
                // ref arg
                Number var5 = (Number) ((Map<String, Object>) __args__).get("var5");
            
                // ref
                com.iflytek.cloud.FaceDetector __this__ = (com.iflytek.cloud.FaceDetector) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + __this__ + "::trackNV21(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.trackNV21(var1, var2.intValue(), var3.intValue(), var4.intValue(), var5.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceDetector::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.FaceDetector __this__ = (com.iflytek.cloud.FaceDetector) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + __this__ + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::sendRequest", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.FaceRequest __this__ = (com.iflytek.cloud.FaceRequest) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + __this__ + "::sendRequest(" + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.sendRequest(var1, new com.iflytek.cloud.RequestListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.FaceRequest::sendRequest::Callback@" + String.valueOf(System.identityHashCode(__this__)), new StandardMethodCodec(new FluttifyMessageCodec()));
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onEvent(int var1, android.os.Bundle var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.RequestListener::onEvent",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onBufferReceived(byte[] var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onBufferReceived(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.RequestListener::onBufferReceived",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.RequestListener::onCompleted",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::cancel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.FaceRequest __this__ = (com.iflytek.cloud.FaceRequest) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + __this__ + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::setParameter", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.FaceRequest __this__ = (com.iflytek.cloud.FaceRequest) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + __this__ + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::getParameter", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.FaceRequest __this__ = (com.iflytek.cloud.FaceRequest) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + __this__ + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.FaceRequest::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.FaceRequest __this__ = (com.iflytek.cloud.FaceRequest) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + __this__ + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityResult::getResultString", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.IdentityResult __this__ = (com.iflytek.cloud.IdentityResult) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityResult@" + __this__ + "::getResultString(" + "" + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getResultString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::createVerifier", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier::createVerifier(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.IdentityVerifier __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.IdentityVerifier.createVerifier(var0, new com.iflytek.cloud.InitListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.IdentityVerifier::createVerifier::Callback", new StandardMethodCodec(new FluttifyMessageCodec()));
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onInit(int var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.InitListener::onInit",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::getVerifier", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier::getVerifier(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.IdentityVerifier __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.IdentityVerifier.getVerifier();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::startWorking", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::startWorking(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.startWorking(new com.iflytek.cloud.IdentityListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.IdentityVerifier::startWorking::Callback@" + String.valueOf(System.identityHashCode(__this__)), new StandardMethodCodec(new FluttifyMessageCodec()));
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onResult(com.iflytek.cloud.IdentityResult var1, boolean var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.IdentityListener::onResult",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onError(com.iflytek.cloud.SpeechError var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.IdentityListener::onError",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.IdentityListener::onEvent",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                            put("var3", var3);
                                            put("var4", var4);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::writeData", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // ref arg
                byte[] var3 = (byte[]) ((Map<String, Object>) __args__).get("var3");
                // ref arg
                Number var4 = (Number) ((Map<String, Object>) __args__).get("var4");
                // ref arg
                Number var5 = (Number) ((Map<String, Object>) __args__).get("var5");
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::writeData(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.writeData(var1, var2, var3, var4.intValue(), var5.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::stopWrite", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::stopWrite(" + var1 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.stopWrite(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::execute", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // ref arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::execute(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.execute(var1, var2, var3, new com.iflytek.cloud.IdentityListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.IdentityVerifier::execute::Callback@" + String.valueOf(System.identityHashCode(__this__)), new StandardMethodCodec(new FluttifyMessageCodec()));
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onResult(com.iflytek.cloud.IdentityResult var1, boolean var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.IdentityListener::onResult",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onError(com.iflytek.cloud.SpeechError var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.IdentityListener::onError",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.IdentityListener::onEvent",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                            put("var3", var3);
                                            put("var4", var4);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::isWorking", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::isWorking(" + "" + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.isWorking();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::cancel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::cancel(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.cancel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::setParameter", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::setParameter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.setParameter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::getParameter", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::getParameter(" + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getParameter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.IdentityVerifier::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.IdentityVerifier __this__ = (com.iflytek.cloud.IdentityVerifier) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + __this__ + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::createBufferAccessor", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor::createBufferAccessor(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.msc.ist.AudioAccessor __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.ist.AudioAccessor.createBufferAccessor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::createReadOnlyAccessor", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor::createReadOnlyAccessor(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.msc.ist.AudioAccessor __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.ist.AudioAccessor.createReadOnlyAccessor(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::createWriteReadAccessor", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor::createWriteReadAccessor(" + var0 + var1 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.msc.ist.AudioAccessor __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.ist.AudioAccessor.createWriteReadAccessor(var0, var1.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::getFilePath", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::getFilePath(" + "" + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getFilePath();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::getDataLength", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::getDataLength(" + "" + ")");
                }
            
                // invoke native method
                Long __result__ = null;
                try {
                    __result__ = __this__.getDataLength();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::getAudioInfo", (__args__, __methodResult__) -> {
                // args
                // enum arg
                com.iflytek.cloud.msc.ist.AudioAccessor.AudioKeys var1 = com.iflytek.cloud.msc.ist.AudioAccessor.AudioKeys.values()[(int) ((Map<String, Object>) __args__).get("var1")];
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::getAudioInfo(" + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getAudioInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::getBufferLength", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::getBufferLength(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getBufferLength();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::getCacheLeft", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::getCacheLeft(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getCacheLeft();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::getAudio", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::getAudio(" + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getAudio(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::putAudio", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::putAudio(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.putAudio(var1, var2.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::flush", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::flush(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.flush();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.AudioAccessor::close", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.AudioAccessor __this__ = (com.iflytek.cloud.msc.ist.AudioAccessor) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + __this__ + "::close(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.close();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::sessionEnd", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::sessionEnd(" + var1 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.sessionEnd(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::pushAudioData", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::pushAudioData(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.pushAudioData(var1, var2.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::pushEndFlag", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::pushEndFlag(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.pushEndFlag();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getEpStatus", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::getEpStatus(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getEpStatus();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getAudioVolume", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::getAudioVolume(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getAudioVolume();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getIntValue__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::getIntValue(" + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getIntValue(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getIntValue__String__int", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::getIntValue(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getIntValue(var1, var2.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::setParam", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::setParam(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.setParam(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getStringValue", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::getStringValue(" + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getStringValue(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getIntByTag", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession::getIntByTag(" + var0 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.ist.IstSession.getIntByTag(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getStringByTag", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession::getStringByTag(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.ist.IstSession.getStringByTag(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::hasResult", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::hasResult(" + "" + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.hasResult();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.IstSession::getResultData", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.IstSession __this__ = (com.iflytek.cloud.msc.ist.IstSession) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + __this__ + "::getResultData(" + "" + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = __this__.getResultData();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::getAudioSource", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::getAudioSource(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getAudioSource();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::callbackVolume", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::callbackVolume(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.callbackVolume(var1, var2.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::startTranscripting", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::startTranscripting(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.startTranscripting(new com.iflytek.cloud.TranscripterListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.msc.ist.MscTranscripter::startTranscripting::Callback@" + String.valueOf(System.identityHashCode(__this__)), new StandardMethodCodec(new FluttifyMessageCodec()));
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onVolumeChanged(int var1, byte[] var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.TranscripterListener::onVolumeChanged",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onBeginOfSpeech() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.TranscripterListener::onBeginOfSpeech",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onEndOfSpeech() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.TranscripterListener::onEndOfSpeech",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onResult(com.iflytek.cloud.TranscripterResult var1, boolean var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.TranscripterListener::onResult",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onError(com.iflytek.cloud.SpeechError var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.TranscripterListener::onError",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.iflytek.cloud.TranscripterListener::onEvent",
                                        new HashMap<String, Object>() {{
                                            put("var1", var1);
                                            put("var2", var2);
                                            put("var3", var3);
                                            put("var4", var4);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::stopTranscripting", (__args__, __methodResult__) -> {
                // args
                // ref arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::stopTranscripting(" + var1 + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.stopTranscripting(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::cancel", (__args__, __methodResult__) -> {
                // args
                // ref arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::cancel(" + var1 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.cancel(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::proc_Msg_Netperf", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::proc_Msg_Netperf(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.proc_Msg_Netperf();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::getTranscriptResult", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::getTranscriptResult(" + "" + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.TranscripterResult __result__ = null;
                try {
                    __result__ = __this__.getTranscriptResult();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::getSessionID", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::getSessionID(" + "" + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getSessionID();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::getClientID", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::getClientID(" + "" + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getClientID();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::getUploadBytes", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::getUploadBytes(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getUploadBytes();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::getSyncID", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::getSyncID(" + "" + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getSyncID();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.ist.MscTranscripter::getAudioPath", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.ist.MscTranscripter __this__ = (com.iflytek.cloud.msc.ist.MscTranscripter) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.MscTranscripter@" + __this__ + "::getAudioPath(" + "" + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getAudioPath();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::generateKeyString", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::generateKeyString(" + "" + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.generateKeyString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::encrypt__Uint8List__Uint8List", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::encrypt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.encrypt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::encrypt__String__Uint8List", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::encrypt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.encrypt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::encrypt__String__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::encrypt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.encrypt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::decrypt__Uint8List__Uint8List", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::decrypt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.decrypt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::decrypt__String__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::decrypt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.decrypt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::decrypt__String__Uint8List", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::decrypt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.decrypt(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::byte2hex", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::byte2hex(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.byte2hex(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AESUtil::hex2byte", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::hex2byte(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AESUtil.hex2byte(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AppInfoUtil::getCarrier", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getCarrier(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AppInfoUtil.getCarrier(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AppInfoUtil::getMac", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getMac(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AppInfoUtil.getMac(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AppInfoUtil::getBrowserUserAgent", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getBrowserUserAgent(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AppInfoUtil.getBrowserUserAgent(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AppInfoUtil::getDeviceType", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getDeviceType(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AppInfoUtil.getDeviceType(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AppInfoUtil::checkAndReplaceIllegalSymbols", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::checkAndReplaceIllegalSymbols(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AppInfoUtil.checkAndReplaceIllegalSymbols(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.AppInfoUtil::getActivityMsg", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getActivityMsg(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.AppInfoUtil.getActivityMsg(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Base64::encode", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Base64::encode(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Base64.encode(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Base64::decode", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Base64::decode(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Base64.decode(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::getConfig", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config::getConfig(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.msc.util.Config __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Config.getConfig(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::putBoolean", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                boolean var2 = (boolean) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::putBoolean(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.putBoolean(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::putLong", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::putLong(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.putLong(var1, var2.longValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::putString", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::putString(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.putString(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::putInt", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::putInt(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.putInt(var1, var2.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::putBean", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                java.lang.Object var2 = (java.lang.Object) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::putBean(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.putBean(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::putLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.location.Location var1 = (android.location.Location) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::putLocation(" + var1 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.putLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::removeBean", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::removeBean(" + var1 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.removeBean(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::getBean", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::getBean(" + var1 + var2 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__ = null;
                try {
                    __result__ = __this__.getBean(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::getBoolean", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                boolean var2 = (boolean) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::getBoolean(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = __this__.getBoolean(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::getLong", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::getLong(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Long __result__ = null;
                try {
                    __result__ = __this__.getLong(var1, var2.longValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::getString", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::getString(" + var1 + var2 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = __this__.getString(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::getInt", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::getInt(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = __this__.getInt(var1, var2.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::getLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                com.iflytek.cloud.msc.util.Config __this__ = (com.iflytek.cloud.msc.util.Config) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + __this__ + "::getLocation(" + var1 + ")");
                }
            
                // invoke native method
                Float __result__ = null;
                try {
                    __result__ = __this__.getLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Config::hasGPSPermission", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config::hasGPSPermission(" + var0 + ")");
                }
            
                // invoke native method
                Boolean __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Config.hasGPSPermission(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataLogger::addData", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                byte[] var2 = (byte[]) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                com.iflytek.cloud.msc.util.DataLogger __this__ = (com.iflytek.cloud.msc.util.DataLogger) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataLogger@" + __this__ + "::addData(" + var1 + var2 + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.addData(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataLogger::saveToFile", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                com.iflytek.cloud.msc.util.DataLogger __this__ = (com.iflytek.cloud.msc.util.DataLogger) ((Map<String, Object>) __args__).get("__this__");
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataLogger@" + __this__ + "::saveToFile(" + "" + ")");
                }
            
                // invoke native method
                Void __result__ = null;
                try {
                    __this__.saveToFile();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getComplexDateTime", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Number var0 = (Number) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getComplexDateTime(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getComplexDateTime(var0.longValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getSimpleDateTime", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Number var0 = (Number) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getSimpleDateTime(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getSimpleDateTime(var0.longValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::readInt", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::readInt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.readInt(var0, var1.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::byteToLong", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::byteToLong(" + var0 + var1 + ")");
                }
            
                // invoke native method
                Long __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.byteToLong(var0, var1.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::longToByte", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Number var0 = (Number) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::longToByte(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.longToByte(var0.longValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::RandomInt", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Number var0 = (Number) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::RandomInt(" + var0 + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.RandomInt(var0.intValue(), var1.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::hexstring2Int", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::hexstring2Int(" + var0 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.hexstring2Int(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::dip2px", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::dip2px(" + var0 + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.dip2px(var0, var1.floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::sp2px", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::sp2px(" + var0 + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.sp2px(var0, var1.floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::spModify", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::spModify(" + var0 + var1 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.spModify(var0, var1.floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::splitBuffer", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                Number var1 = (Number) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Number var2 = (Number) ((Map<String, Object>) __args__).get("var2");
                // ref arg
                Number var3 = (Number) ((Map<String, Object>) __args__).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::splitBuffer(" + var0 + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                java.util.ArrayList<byte[]> __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.splitBuffer(var0, var1.intValue(), var2.intValue(), var3.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom__Uint8List", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getUTF8Bom(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getUTF8Bom(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray__String__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getNativeByteArray(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getNativeByteArray(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray__Uint8List__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
                // ref arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getStringFromNativeByteArray(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray__Uint8List", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.DataUtil.getStringFromNativeByteArray(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::lightcode", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::lightcode(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.lightcode(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::zip5xEncode", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::zip5xEncode(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.zip5xEncode(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::zip5xDecode", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::zip5xDecode(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.zip5xDecode(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::MD5", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::MD5(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.MD5(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::cut16MD5", (__args__, __methodResult__) -> {
                // args
                // ref arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::cut16MD5(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.cut16MD5(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::getFileMd5", (__args__, __methodResult__) -> {
                // args
                // ref arg
                java.io.File var0 = (java.io.File) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::getFileMd5(" + var0 + ")");
                }
            
                // invoke native method
                String __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.getFileMd5(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::encrypt", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::encrypt(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.encrypt(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::intToByteArray", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Number var0 = (Number) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::intToByteArray(" + var0 + ")");
                }
            
                // invoke native method
                byte[] __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.intToByteArray(var0.intValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.Encrypter::byteArrayToInt", (__args__, __methodResult__) -> {
                // args
                // ref arg
                byte[] var0 = (byte[]) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::byteArrayToInt(" + var0 + ")");
                }
            
                // invoke native method
                Integer __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.Encrypter.byteArrayToInt(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
            // method
            put("com.iflytek.cloud.msc.util.FileDownloader::getDownLoadManager", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FileDownloader::getDownLoadManager(" + var0 + ")");
                }
            
                // invoke native method
                com.iflytek.cloud.msc.util.FileDownloader __result__ = null;
                try {
                    __result__ = com.iflytek.cloud.msc.util.FileDownloader.getDownLoadManager(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                __methodResult__.success(__result__);
            });
        }};
    }
}
